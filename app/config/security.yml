#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        demo_login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        demo_secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _demo_security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
#            #anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"
#
#    access_control:
#        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
            logout:       
                path: fos_user_security_logout
                target: /home
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICAT}
        - { path: ^/reservacion/new, roles:  [ROLE_GENERAL, ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/create, roles:  [ROLE_GENERAL, ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/.*/addActividades, roles:  [ROLE_GENERAL, ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/.*/saveActividades, roles:  [ROLE_GENERAL, ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/.*/servicios, roles:  [ROLE_GENERAL, ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/.*/agregarServicios, roles:  [ROLE_GENERAL, ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/.*/edit, roles: [ROLE_GERENTE, ROLE_ADMIN] }
        - { path: ^/reservacion/.*/update, roles: [ROLE_GERENTE, ROLE_ADMIN] }   
        - { path: ^/reservacion/.*/delete, role: ROLE_ADMIN }
        - { path: ^/reservacion/reporte_reservaciones, role: ROLE_ADMIN }
        - { path: ^/reservacion/reporte_ganancias, role: ROLE_ADMIN }
